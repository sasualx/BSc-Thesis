#!/bin/bash
a=0.699
bias_input_scaling=0.3587
input_input_scaling=0.8333
output_input_scaling=0.0655
spectral_radius=0.3


print_parameters(){
  echo "inSize = 2" > Parameters.py
  echo "outSize = 5" >> Parameters.py
  echo "resSize = 100" >> Parameters.py
  echo "fixed_node_connection = 10" >> Parameters.py
  echo "a = $a #leaking rate" >> Parameters.py
  echo "input_scaling = [ 10 * $bias_input_scaling , 10 * $input_input_scaling, 10 * $output_input_scaling]" >> Parameters.py
  echo "desired_spectral_radius = 10 * $spectral_radius" >> Parameters.py
}


add_digit(){
  local error=()
  for i in {0..9}
  do
    echo "$2$i"
    eval "$1=\"$2$i\""
    print_parameters
    python3 esn_train.py
    error+=($(./esn_test.py))
    echo "${error[$i]}"
  done
  max=0
  for n in "${!error[@]}" ;
  do
    if (( $(bc -l<<<"${error[$n]} > ${error[$max]}") ))
    then
      max=$n
    fi
  done
  eval "$1=\"$2$max\""
  echo "$1 $max ${error[$max]} $2$max"
  echo
  echo
  echo
  if (( $3 \> 0  ))
  then
    if [ $max -eq 0 ]
    then
      add_digit $1 "$2$max" $(($3 - 1))
    elif [ $max -eq 9 ]
    then
      x=99
      eval "$1=\"$2$x\""
      print_parameters
      python3 esn_train.py
      error1=($(./esn_test.py))
      if (( $(bc -l<<<"$error1 > ${error[$max]}")))
      then
        add_digit $1 "$2$max" $(($3 - 1))
      else
        add_digit $1 "$2$(($max-1))" $(($3 - 1))
      fi
    elif (( $(bc -l<<<"${error[$(($max+1))]} > ${error[$(($max-1))]}")))
    then
      add_digit $1 "$2$max" $(($3 - 1))
    else
      add_digit $1 "$2$(($max-1))" $(($3 - 1))
    fi
  else
    echo "Finished $1 a = $a bias_input_scaling = $bias_input_scaling input_input_scaling = $input_input_scaling output_input_scaling = $output_input_scaling spectral_radius = $spectral_radius"
    echo
    echo
    echo
    echo
    echo
  fi
}


add_digit a "0." 3
add_digit output_input_scaling "0." 3
add_digit input_input_scaling "0.65" 1
add_digit output_input_scaling "0." 3
add_digit spectral_radius "0." 3
print_parameters
